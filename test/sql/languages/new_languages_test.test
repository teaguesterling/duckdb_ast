# Test new language support (Markdown, Java, HTML, CSS, C)
# Note: PHP support disabled due to scanner dependency on tree-sitter internals

# Test 1: Verify all new languages are supported
query III
SELECT COUNT(*) >= 8 AS has_many_languages,
       SUM(CASE WHEN language = 'markdown' THEN 1 ELSE 0 END) AS has_markdown,
       SUM(CASE WHEN language = 'java' THEN 1 ELSE 0 END) AS has_java
FROM ast_supported_languages();
----
true	1	1

query IIII
SELECT SUM(CASE WHEN language = 'html' THEN 1 ELSE 0 END) AS has_html,
       SUM(CASE WHEN language = 'css' THEN 1 ELSE 0 END) AS has_css,
       SUM(CASE WHEN language = 'c' THEN 1 ELSE 0 END) AS has_c,
       SUM(CASE WHEN language = 'rust' THEN 1 ELSE 0 END) AS has_rust
FROM ast_supported_languages();
----
1	1	1	0

# Test 2: Parse Markdown file
query III
SELECT COUNT(*) > 50 AS has_nodes,
       COUNT(CASE WHEN type = 'atx_heading' THEN 1 END) > 0 AS has_headings,
       COUNT(CASE WHEN type = 'fenced_code_block' THEN 1 END) > 0 AS has_code_blocks
FROM read_ast('test/data/languages/markdown/test.md');
----
true	true	true

# Test 3: Extract Markdown headings
query I
SELECT name
FROM read_ast('test/data/languages/markdown/test.md')
WHERE type = 'atx_heading'
ORDER BY start_byte
LIMIT 3;
----
# Test Markdown Document
## Code Examples
## Lists

# Test 4: Parse Java file
query III
SELECT COUNT(*) > 100 AS has_nodes,
       COUNT(CASE WHEN type = 'class_declaration' THEN 1 END) > 0 AS has_classes,
       COUNT(CASE WHEN type = 'method_declaration' THEN 1 END) > 0 AS has_methods
FROM read_ast('test/data/languages/java/Test.java');
----
true	true	true

# Test 5: Extract Java class and method names
query I
SELECT name
FROM read_ast('test/data/languages/java/Test.java')
WHERE type IN ('class_declaration', 'method_declaration', 'interface_declaration', 'enum_declaration')
  AND name != ''
ORDER BY start_byte
LIMIT 5;
----
Test
toString
increment
getCounter
reset

# PHP tests removed - PHP support disabled due to scanner dependencies

# Test 6: Parse HTML file
query III
SELECT COUNT(*) > 100 AS has_nodes,
       COUNT(CASE WHEN type = 'element' THEN 1 END) > 10 AS has_elements,
       COUNT(CASE WHEN type = 'attribute' THEN 1 END) > 5 AS has_attributes
FROM read_ast('test/data/languages/html/test.html');
----
true	true	true

# Test 7: Extract HTML tag names
query I
SELECT DISTINCT name
FROM read_ast('test/data/languages/html/test.html')
WHERE type = 'tag_name'
  AND name != ''
ORDER BY name
LIMIT 5;
----
a
address
article
blockquote
body

# Test 8: Parse CSS file
query III
SELECT COUNT(*) > 100 AS has_nodes,
       COUNT(CASE WHEN type = 'rule_set' THEN 1 END) > 10 AS has_rules,
       COUNT(CASE WHEN type = 'declaration' THEN 1 END) > 20 AS has_declarations
FROM read_ast('test/data/languages/css/test.css');
----
true	true	true

# Test 9: Extract CSS selectors and properties
query I
SELECT COUNT(DISTINCT name) > 10 AS has_many_properties
FROM read_ast('test/data/languages/css/test.css')
WHERE type = 'property_name'
  AND name != '';
----
true

# Test 10: Parse C file
query III
SELECT COUNT(*) > 200 AS has_nodes,
       COUNT(CASE WHEN type = 'function_definition' THEN 1 END) > 5 AS has_functions,
       COUNT(CASE WHEN type = 'struct_specifier' THEN 1 END) > 0 AS has_structs
FROM read_ast('test/data/languages/c/test.c');
----
true	true	true

# Test 11: Extract C function names
query I
SELECT name
FROM read_ast('test/data/languages/c/test.c')
WHERE type = 'function_definition'
  AND name != ''
ORDER BY start_byte
LIMIT 5;
----
main
create_node
insert_node
find_node
free_list

# Test 12: Test literal extraction in new languages
query II
SELECT COUNT(CASE WHEN type = 'string_literal' AND name != '' THEN 1 END) > 0 AS java_strings,
       COUNT(CASE WHEN type = 'string_literal' AND name != '' THEN 1 END) > 0 AS c_strings
FROM (
    SELECT type, name FROM read_ast('test/data/languages/java/Test.java')
    UNION ALL
    SELECT type, name FROM read_ast('test/data/languages/c/test.c')
);
----
true	true

# Test 13: Test parse_ast with new languages
query II
SELECT type, name
FROM parse_ast('# Hello World', 'markdown')
WHERE type = 'atx_heading'
LIMIT 1;
----
atx_heading	# Hello World

query II
SELECT type, name
FROM parse_ast('public class Test {}', 'java')
WHERE type = 'class_declaration'
LIMIT 1;
----
class_declaration	Test

query II
SELECT type, name
FROM parse_ast('<div class="test">Hello</div>', 'html')
WHERE type = 'tag_name'
ORDER BY start_byte
LIMIT 1;
----
tag_name	div

query II
SELECT type, name
FROM parse_ast('.test { color: red; }', 'css')
WHERE type = 'class_selector'
LIMIT 1;
----
class_selector	.test

query II
SELECT type, name
FROM parse_ast('int main() { return 0; }', 'c')
WHERE type = 'function_definition'
LIMIT 1;
----
function_definition	main