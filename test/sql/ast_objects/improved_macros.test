# name: test/sql/ast_objects/improved_macros.test
# description: Test improved SQL macros with internal type handling
# group: [duckdb_ast]

require duckdb_ast

require json

# Macros are now auto-loaded by the extension

# Test 1: Function names with improved macro
query I
SELECT ast_function_names(nodes)::VARCHAR as functions
FROM read_ast_objects('test/data/python/simple.py', 'python');
----
["hello","__init__","add","main"]

# Test 2: Function details with proper line number ordering
query I
SELECT func_detail.value::VARCHAR as function_info
FROM read_ast_objects('test/data/python/simple.py', 'python') AS ast,
     json_each(ast_function_details(ast.nodes)) AS func_detail
ORDER BY json_extract(func_detail.value, '$.start_line')::INTEGER
LIMIT 1;
----
{"name":"hello","start_line":1,"end_line":3,"depth":1,"id":1}

# Test 3: Summary with all type casting handled internally
query III
SELECT 
    json_extract(ast_summary(nodes), '$.total_nodes') as total,
    json_extract(ast_summary(nodes), '$.max_depth') as depth,
    json_extract(ast_summary(nodes), '$.function_count') as func_count
FROM read_ast_objects('test/data/python/simple.py', 'python');
----
110	8	4

# Test 4: Safe handling of empty results
query I
SELECT json_array_length(ast_find_type(nodes, 'nonexistent_type')) as empty_result
FROM read_ast_objects('test/data/python/simple.py', 'python');
----
0

# Test 5: Natural ordering works with line numbers
query I
WITH functions AS (
    SELECT func_detail.value as func
    FROM read_ast_objects('test/data/python/simple.py', 'python') AS ast,
         json_each(ast_function_details(ast.nodes)) AS func_detail
)
SELECT json_extract_string(func, '$.name') as name
FROM functions
ORDER BY json_extract(func, '$.start_line')::INTEGER;
----
hello
__init__
add
main

# Test 6: Complex analysis using improved macros
query I
SELECT 
    CASE 
        WHEN json_extract(ast_summary(nodes), '$.function_count')::INTEGER > 3 THEN 'Module'
        WHEN json_extract(ast_summary(nodes), '$.function_count')::INTEGER > 1 THEN 'Library'
        ELSE 'Script'
    END as file_type
FROM read_ast_objects('test/data/python/simple.py', 'python');
----
Module