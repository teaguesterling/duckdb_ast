// JSON language node type definitions
// Format: DEF_TYPE(raw_type, semantic_type, name_strategy, value_strategy, flags)

// Document structure
DEF_TYPE("document", DEFINITION_MODULE, NONE, NONE, 0x01)

// Object structure
DEF_TYPE("object", LITERAL_STRUCTURED, NONE, NONE, 0)
DEF_TYPE("pair", PATTERN_DESTRUCTURE, FIND_PROPERTY, NONE, 0)

// Array structure  
DEF_TYPE("array", LITERAL_STRUCTURED, NONE, NONE, 0)

// Literals and values
DEF_TYPE("string", LITERAL_STRING, NODE_TEXT, NONE, 0)
DEF_TYPE("number", LITERAL_NUMBER, NODE_TEXT, NONE, 0)
DEF_TYPE("true", LITERAL_ATOMIC, NODE_TEXT, NONE, 0)
DEF_TYPE("false", LITERAL_ATOMIC, NODE_TEXT, NONE, 0)
DEF_TYPE("null", LITERAL_ATOMIC, NODE_TEXT, NONE, 0)

// String content
DEF_TYPE("string_content", LITERAL_STRING, NODE_TEXT, NONE, 0)
DEF_TYPE("escape_sequence", LITERAL_STRING, NODE_TEXT, NONE, 0)

// Punctuation
DEF_TYPE("{", PARSER_DELIMITER, NODE_TEXT, NONE, 0)
DEF_TYPE("}", PARSER_DELIMITER, NODE_TEXT, NONE, 0)
DEF_TYPE("[", PARSER_DELIMITER, NODE_TEXT, NONE, 0)
DEF_TYPE("]", PARSER_DELIMITER, NODE_TEXT, NONE, 0)
DEF_TYPE(":", PARSER_PUNCTUATION, NODE_TEXT, NONE, 0)
DEF_TYPE(",", PARSER_PUNCTUATION, NODE_TEXT, NONE, 0)
DEF_TYPE("\"", PARSER_DELIMITER, NODE_TEXT, NONE, 0)

// Error handling
DEF_TYPE("ERROR", PARSER_SYNTAX, NODE_TEXT, NONE, 0)