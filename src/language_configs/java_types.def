// Java language node type definitions
// Format: DEF_TYPE(raw_type, semantic_type, name_strategy, value_strategy, flags)

// Compilation unit and packages
DEF_TYPE(program, DEFINITION_MODULE, NONE, NONE, 0x01)
DEF_TYPE(package_declaration, DEFINITION_MODULE, FIND_IDENTIFIER, NONE, 0x01)
DEF_TYPE(import_declaration, EXTERNAL_IMPORT, NODE_TEXT, NONE, 0x01)

// Class and interface definitions
DEF_TYPE(class_declaration, DEFINITION_CLASS, FIND_IDENTIFIER, NONE, 0x01)
DEF_TYPE(interface_declaration, DEFINITION_CLASS, FIND_IDENTIFIER, NONE, 0x01)
DEF_TYPE(enum_declaration, DEFINITION_CLASS, FIND_IDENTIFIER, NONE, 0x01)
DEF_TYPE(annotation_type_declaration, DEFINITION_CLASS, FIND_IDENTIFIER, NONE, 0x01)
DEF_TYPE(record_declaration, DEFINITION_CLASS, FIND_IDENTIFIER, NONE, 0x01)

// Method and constructor definitions
DEF_TYPE(method_declaration, DEFINITION_FUNCTION, FIND_IDENTIFIER, NONE, 0x01)
DEF_TYPE(constructor_declaration, DEFINITION_FUNCTION, FIND_IDENTIFIER, NONE, 0x01)
DEF_TYPE(static_initializer, DEFINITION_FUNCTION, NONE, NONE, 0x01)
DEF_TYPE(instance_initializer, DEFINITION_FUNCTION, NONE, NONE, 0x01)

// Field and variable declarations
DEF_TYPE(field_declaration, DEFINITION_VARIABLE, FIND_IDENTIFIER, NONE, 0x01)
DEF_TYPE(local_variable_declaration, DEFINITION_VARIABLE, FIND_IDENTIFIER, NONE, 0)
DEF_TYPE(variable_declarator, DEFINITION_VARIABLE, FIND_IDENTIFIER, NONE, 0)
DEF_TYPE(formal_parameter, DEFINITION_VARIABLE, FIND_IDENTIFIER, NONE, 0)
DEF_TYPE(spread_parameter, DEFINITION_VARIABLE, FIND_IDENTIFIER, NONE, 0)
DEF_TYPE(catch_formal_parameter, DEFINITION_VARIABLE, FIND_IDENTIFIER, NONE, 0)

// Types
DEF_TYPE(type_identifier, TYPE_REFERENCE, NODE_TEXT, NONE, 0)
DEF_TYPE(generic_type, TYPE_GENERIC, NODE_TEXT, NONE, 0)
DEF_TYPE(array_type, TYPE_COMPOSITE, NONE, NONE, 0)
DEF_TYPE(integral_type, TYPE_PRIMITIVE, NODE_TEXT, NONE, 0)
DEF_TYPE(floating_point_type, TYPE_PRIMITIVE, NODE_TEXT, NONE, 0)
DEF_TYPE(boolean_type, TYPE_PRIMITIVE, NODE_TEXT, NONE, 0)
DEF_TYPE(void_type, TYPE_PRIMITIVE, NODE_TEXT, NONE, 0)

// Expressions and calls
DEF_TYPE(method_invocation, COMPUTATION_CALL, FIND_IDENTIFIER, NONE, 0)
DEF_TYPE(object_creation_expression, COMPUTATION_CALL, FIND_IDENTIFIER, NONE, 0)
DEF_TYPE(field_access, COMPUTATION_ACCESS, FIND_IDENTIFIER, NONE, 0)
DEF_TYPE(array_access, COMPUTATION_ACCESS, NONE, NONE, 0)
DEF_TYPE(assignment_expression, OPERATOR_ASSIGNMENT, NONE, NONE, 0)
DEF_TYPE(binary_expression, OPERATOR_ARITHMETIC, NONE, NONE, 0)
DEF_TYPE(unary_expression, OPERATOR_ARITHMETIC, NONE, NONE, 0)
DEF_TYPE(update_expression, OPERATOR_ARITHMETIC, NONE, NONE, 0)
DEF_TYPE(ternary_expression, FLOW_CONDITIONAL, NONE, NONE, 0)
DEF_TYPE(lambda_expression, DEFINITION_FUNCTION, NONE, NONE, 0)
DEF_TYPE(method_reference, COMPUTATION_ACCESS, NODE_TEXT, NONE, 0)

// Identifiers and literals
DEF_TYPE(identifier, NAME_IDENTIFIER, NODE_TEXT, NONE, 0)
DEF_TYPE(decimal_integer_literal, LITERAL_NUMBER, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE(hex_integer_literal, LITERAL_NUMBER, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE(octal_integer_literal, LITERAL_NUMBER, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE(binary_integer_literal, LITERAL_NUMBER, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE(decimal_floating_point_literal, LITERAL_NUMBER, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE(hex_floating_point_literal, LITERAL_NUMBER, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE(true, LITERAL_ATOMIC, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE(false, LITERAL_ATOMIC, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE(null_literal, LITERAL_ATOMIC, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE(string_literal, LITERAL_STRING, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE(character_literal, LITERAL_STRING, NODE_TEXT, NODE_TEXT, 0)

// Control flow
DEF_TYPE(if_statement, FLOW_CONDITIONAL, NONE, NONE, 0)
DEF_TYPE(while_statement, FLOW_LOOP, NONE, NONE, 0)
DEF_TYPE(for_statement, FLOW_LOOP, NONE, NONE, 0)
DEF_TYPE(enhanced_for_statement, FLOW_LOOP, NONE, NONE, 0)
DEF_TYPE(do_statement, FLOW_LOOP, NONE, NONE, 0)
DEF_TYPE(switch_expression, FLOW_CONDITIONAL, NONE, NONE, 0)
DEF_TYPE(switch_statement, FLOW_CONDITIONAL, NONE, NONE, 0)
DEF_TYPE(break_statement, FLOW_JUMP, NONE, NONE, 0)
DEF_TYPE(continue_statement, FLOW_JUMP, NONE, NONE, 0)
DEF_TYPE(return_statement, FLOW_JUMP, NONE, NONE, 0)
DEF_TYPE(yield_statement, FLOW_JUMP, NONE, NONE, 0)

// Exception handling
DEF_TYPE(try_statement, ERROR_TRY, NONE, NONE, 0)
DEF_TYPE(try_with_resources_statement, ERROR_TRY, NONE, NONE, 0)
DEF_TYPE(catch_clause, ERROR_CATCH, NONE, NONE, 0)
DEF_TYPE(finally_clause, ERROR_FINALLY, NONE, NONE, 0)
DEF_TYPE(throw_statement, ERROR_THROW, NONE, NONE, 0)

// Annotations
DEF_TYPE(annotation, METADATA_ANNOTATION, FIND_IDENTIFIER, NONE, 0)
DEF_TYPE(marker_annotation, METADATA_ANNOTATION, FIND_IDENTIFIER, NONE, 0)
DEF_TYPE(annotation_argument_list, ORGANIZATION_LIST, NONE, NONE, 0)

// Comments
DEF_TYPE(line_comment, METADATA_COMMENT, NODE_TEXT, NODE_TEXT, 0x08)
DEF_TYPE(block_comment, METADATA_COMMENT, NODE_TEXT, NODE_TEXT, 0x08)

// Modifiers
DEF_TYPE(modifiers, METADATA_ANNOTATION, NONE, NONE, 0)
DEF_TYPE(modifier, METADATA_ANNOTATION, NODE_TEXT, NONE, 0)