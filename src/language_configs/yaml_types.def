// YAML language node type definitions
// Format: DEF_TYPE(raw_type, semantic_type, name_strategy, value_strategy, flags)

// Document structure
DEF_TYPE("stream", DEFINITION_MODULE, NONE, NONE, 0x01)
DEF_TYPE("document", DEFINITION_MODULE, NONE, NONE, 0x01)

// Block mappings and sequences
DEF_TYPE("block_mapping", LITERAL_STRUCTURED, NONE, NONE, 0)
DEF_TYPE("block_mapping_pair", PATTERN_DESTRUCTURE, FIND_PROPERTY, FIND_PROPERTY, 0)
DEF_TYPE("block_sequence", LITERAL_STRUCTURED, NONE, NONE, 0)
DEF_TYPE("block_sequence_item", ORGANIZATION_LIST, NONE, NONE, 0)

// Flow mappings and sequences
DEF_TYPE("flow_mapping", LITERAL_STRUCTURED, NONE, NONE, 0)
DEF_TYPE("flow_pair", PATTERN_DESTRUCTURE, FIND_PROPERTY, FIND_PROPERTY, 0)
DEF_TYPE("flow_sequence", LITERAL_STRUCTURED, NONE, NONE, 0)

// Scalars and literals
DEF_TYPE("plain_scalar", LITERAL_STRING, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE("single_quote_scalar", LITERAL_STRING, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE("double_quote_scalar", LITERAL_STRING, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE("literal_scalar", LITERAL_STRING, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE("folded_scalar", LITERAL_STRING, NODE_TEXT, NODE_TEXT, 0)

// Boolean and null values
DEF_TYPE("boolean_scalar", LITERAL_ATOMIC, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE("null_scalar", LITERAL_ATOMIC, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE("integer_scalar", LITERAL_NUMBER, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE("float_scalar", LITERAL_NUMBER, NODE_TEXT, NODE_TEXT, 0)

// Tags and anchors
DEF_TYPE("tag", METADATA_ANNOTATION, NODE_TEXT, NONE, 0)
DEF_TYPE("anchor", METADATA_ANNOTATION, NODE_TEXT, NONE, 0)
DEF_TYPE("alias", COMPUTATION_ACCESS, NODE_TEXT, NONE, 0)

// Directives
DEF_TYPE("directive", METADATA_DIRECTIVE, NODE_TEXT, NONE, 0x01)
DEF_TYPE("yaml_directive", METADATA_DIRECTIVE, NODE_TEXT, NONE, 0x01)
DEF_TYPE("tag_directive", METADATA_DIRECTIVE, NODE_TEXT, NONE, 0x01)
DEF_TYPE("reserved_directive", METADATA_DIRECTIVE, NODE_TEXT, NONE, 0x01)

// Comments
DEF_TYPE("comment", METADATA_COMMENT, NODE_TEXT, NODE_TEXT, 0x08)

// String content and escapes
DEF_TYPE("string_scalar", LITERAL_STRING, NODE_TEXT, NODE_TEXT, 0)
DEF_TYPE("escape_sequence", LITERAL_STRING, NODE_TEXT, NODE_TEXT, 0)

// Punctuation and structure
DEF_TYPE(":", PARSER_PUNCTUATION, NODE_TEXT, NONE, 0)
DEF_TYPE(",", PARSER_PUNCTUATION, NODE_TEXT, NONE, 0)
DEF_TYPE("-", PARSER_PUNCTUATION, NODE_TEXT, NONE, 0)
DEF_TYPE("[", PARSER_DELIMITER, NODE_TEXT, NONE, 0)
DEF_TYPE("]", PARSER_DELIMITER, NODE_TEXT, NONE, 0)
DEF_TYPE("{", PARSER_DELIMITER, NODE_TEXT, NONE, 0)
DEF_TYPE("}", PARSER_DELIMITER, NODE_TEXT, NONE, 0)
DEF_TYPE("|", PARSER_PUNCTUATION, NODE_TEXT, NONE, 0)
DEF_TYPE(">", PARSER_PUNCTUATION, NODE_TEXT, NONE, 0)
DEF_TYPE("---", PARSER_DELIMITER, NODE_TEXT, NONE, 0)
DEF_TYPE("...", PARSER_DELIMITER, NODE_TEXT, NONE, 0)

// YAML indicators
DEF_TYPE("block_scalar_header", ORGANIZATION_SCOPE, NONE, NONE, 0)
DEF_TYPE("block_chomping_indicator", METADATA_ANNOTATION, NODE_TEXT, NONE, 0)
DEF_TYPE("block_indentation_indicator", METADATA_ANNOTATION, NODE_TEXT, NONE, 0)

// Error handling
DEF_TYPE("ERROR", PARSER_SYNTAX, NODE_TEXT, NONE, 0)